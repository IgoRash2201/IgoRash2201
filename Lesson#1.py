# 1. Поработайте с переменными, создайте несколько, выведите на экран. Запросите у пользователя
# некоторые числа и строки, сохраните в переменные, затем выведите на экран.

# создание нескольких переменных
str_var = "Первый пошел!"
float_var = 4.56
int_var = 777
list_var = [9, 7, 'жесть']
dict_var = {1: 'А', 2: 'B', 3: 'C'}

# вывод созданных переменных на экран
print(str_var)
print(float_var)
print(int_var)
print(list_var)
print(dict_var)

# запрос у пользователя нескольких чисел:
dig_1 = int(input('Введите целое число: '))
dig_2 = int(input('Введите целое число: '))
dig_3 = int(input('Введите целое число: '))

# запрос у пользователя нескольких строк:
str_1 = input('Введите строку: ')
str_2 = input('Введите строку: ')
str_3 = input('Введите строку: ')

# вывод сохраненных данных:
print("Вы ввели числа:", dig_1, dig_2, dig_3)
print("Вы ввели строки:", str_1, str_2, str_3)

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
entered_time = int(input('Введите время в секундах: '))
seconds = (entered_time % 3600) % 60
minutes = (entered_time % 3600) // 60
hours = entered_time // 3600
# проверяем, возможно ли вывести число в указанном формате
if hours > 99:
    print("Превышен лимит числового значения, число часов не подходит под формат чч:мм:сс")
else:
    print(f'Переведите время в часы: {hours}, минуты: {minutes}, секунды: {seconds} '
      f'и выведите в формате чч:мм:сс.: {hours}:{minutes}:{seconds}')

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3.
# Считаем 3 + 33 + 333 = 369.
n = input('Введите целое число от 0 до 9: ')

nn = (n + n)
nnn = (n + n + n)
print(f'{(n)} + {nn} + {nnn} = {int(n) + int(nn) + int(nnn)}')

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.

# ввод числа Пользователем
num = int(input("Введите целое положительное число: "))

# задание начального значения наибольшей цифры
max_number = 0

# перебор цифр числа и сравнение с наибольшим
while num > 0:
    number = num % 10
    if number > max_number:
        max_number = number
        if max_number == 9:   # завершение перебора, если вылезла 9-ка
            break
    num //= 10

# вывод наибольшего числа
print(f'Cамая большая цифра в числе: {max_number}.')

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма.
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее сообщение.

# запрос значений выручки и издержек
revenue = int(input('Введите значения выручки: '))
costs = int(input('Введите значения издержек: '))
# расчет прибыли
profit = revenue - costs

if revenue > costs:
    print('Фирма работает с прибылью')
    profitability = str(profit / revenue) + "%" # расчет рентабельности
    print(f'Рентабельность выручки составляет: {profitability}')
elif revenue < costs:
    print('Фирма работает в убыток')
else:
    print('Делайте вашу работу наполненной жизнью, а не жизнь, наполненную работой!')

# 6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке.
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
employees = int(input('Введите кол-во сотрудников фирмы: '))
profit_per_employee = profit / employees  # расчет прибыли на одного сотрудника
print('Прибыль фирмы в расчете на одного сотрудника составила {:.2f}'.format(profit_per_employee))

"""
# 7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день спортсмен 
увеличивал результат на 10% относительно предыдущего. Требуется определить номер дня, на который результат спортсмена 
составит не менее b километров. Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня. 
Например: a = 2, b = 3.
Результат:
      1-й день: 2
      2-й день: 2,2
      3-й день: 2,42
      4-й день: 2,66
      5-й день: 2,93
      6-й день: 3,22
Ответ: на 6-ой день спортсмен достиг результата — не менее 3 км. 
"""
start = float(input('Ввести расстояние первой пробежки в км: '))
the_end = float(input('Ввести целевой результат за тренировку в км: '))
training = 0
while start < the_end:
    start += 0.1
    training += 1
print(f"На {training}-й день спортсмен достиг результата — не менее {the_end} км")